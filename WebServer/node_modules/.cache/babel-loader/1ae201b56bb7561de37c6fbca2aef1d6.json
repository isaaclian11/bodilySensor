{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Justin Worley\\\\492repo\\\\WebServer\\\\src\\\\components\\\\Home.jsx\";\nimport React, { Component } from 'react';\nimport { Container, Button, Jumbotron } from 'react-bootstrap';\nimport './Home.css';\nimport firebaseApp from 'firebase/app';\nimport 'firebase/auth';\nimport * as AWS from 'aws-sdk';\nimport PostData from './post.json';\nexport default class Home extends Component {\n  constructor() {\n    super();\n    this.state = {\n      data: {\n        'userID': 'zbc123'\n      }\n    };\n  }\n\n  render() {\n    //firebaseApp.auth().setPersistence(firebaseApp.auth.Auth.Persistence.SESSION)\n    const user = firebaseApp.auth().currentUser; //const awsStuff = callAWS;\n\n    if (user) {\n      AWS.config.update({\n        region: 'us-east-2',\n        endpoint: 'dynamodb.us-east-2.amazonaws.com',\n        accessKeyId: 'AKIAYPNA3BUHUHWK52FL',\n        secretAccessKey: '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'\n      });\n      this.dynamodb = new AWS.DynamoDB();\n      this.docClient = new AWS.DynamoDB.DocumentClient();\n      var table = \"Provider_Patients\";\n      var name = 12345;\n      var params = {\n        TableName: table,\n        Key: {\n          \"patient_id\": name\n        }\n      };\n      this.docClient.get(params, function (err, data) {\n        if (err) {\n          console.error(\"Unable to read item. Error JSON:\", JSON.stringify(err, null, 2));\n        } else {\n          console.log(\"GetItem succeeded:\", JSON.stringify(data, null, 2));\n        }\n      }); //console.log(awsStuff);\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 25\n        }\n      }, PostData.map((person, index) => /*#__PURE__*/React.createElement(\"p\", {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 25\n        }\n      }, \"Hello, \", person.name, \"!\")));\n    } else {\n      return /*#__PURE__*/React.createElement(Container, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Jumbotron, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 25\n        }\n      }, \"You are not meant to be here!\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 25\n        }\n      }, \"Here you will be monitored.\")), /*#__PURE__*/React.createElement(Button, {\n        onClick: () => this.props.history.push('/'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }\n      }, \"Login\"));\n    }\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Justin Worley/492repo/WebServer/src/components/Home.jsx"],"names":["React","Component","Container","Button","Jumbotron","firebaseApp","AWS","PostData","Home","constructor","state","data","render","user","auth","currentUser","config","update","region","endpoint","accessKeyId","secretAccessKey","dynamodb","DynamoDB","docClient","DocumentClient","table","name","params","TableName","Key","get","err","console","error","JSON","stringify","log","map","person","index","props","history","push"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,SAAT,EAAoBC,MAApB,EAA4BC,SAA5B,QAA6C,iBAA7C;AACA,OAAO,YAAP;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,OAAO,eAAP;AACA,OAAO,KAAKC,GAAZ,MAAqB,SAArB;AACA,OAAOC,QAAP,MAAqB,aAArB;AAIA,eAAe,MAAMC,IAAN,SAAmBP,SAAnB,CAA6B;AACxCQ,EAAAA,WAAW,GAAG;AACV;AACA,SAAKC,KAAL,GAAa;AAAEC,MAAAA,IAAI,EAAE;AAAC,kBAAU;AAAX;AAAR,KAAb;AACD;;AAIHC,EAAAA,MAAM,GAAG;AAGL;AACA,UAAMC,IAAI,GAAGR,WAAW,CAACS,IAAZ,GAAmBC,WAAhC,CAJK,CAKL;;AACA,QAAIF,IAAJ,EAAU;AACNP,MAAAA,GAAG,CAACU,MAAJ,CAAWC,MAAX,CAAkB;AACdC,QAAAA,MAAM,EAAE,WADM;AAEdC,QAAAA,QAAQ,EAAE,kCAFI;AAGdC,QAAAA,WAAW,EAAE,sBAHC;AAIdC,QAAAA,eAAe,EAAE;AAJH,OAAlB;AAOA,WAAKC,QAAL,GAAgB,IAAIhB,GAAG,CAACiB,QAAR,EAAhB;AACA,WAAKC,SAAL,GAAiB,IAAIlB,GAAG,CAACiB,QAAJ,CAAaE,cAAjB,EAAjB;AACA,UAAIC,KAAK,GAAG,mBAAZ;AAEA,UAAIC,IAAI,GAAG,KAAX;AAEA,UAAIC,MAAM,GAAG;AACTC,QAAAA,SAAS,EAAEH,KADF;AAETI,QAAAA,GAAG,EAAC;AACA,wBAAcH;AADd;AAFK,OAAb;AAMA,WAAKH,SAAL,CAAeO,GAAf,CAAmBH,MAAnB,EAA2B,UAASI,GAAT,EAAcrB,IAAd,EAAoB;AAC3C,YAAIqB,GAAJ,EAAS;AACLC,UAAAA,OAAO,CAACC,KAAR,CAAc,kCAAd,EAAkDC,IAAI,CAACC,SAAL,CAAeJ,GAAf,EAAoB,IAApB,EAA0B,CAA1B,CAAlD;AACH,SAFD,MAEO;AACHC,UAAAA,OAAO,CAACI,GAAR,CAAY,oBAAZ,EAAkCF,IAAI,CAACC,SAAL,CAAezB,IAAf,EAAqB,IAArB,EAA2B,CAA3B,CAAlC;AACH;AACJ,OAND,EApBM,CA4BN;;AACI,0BAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACHJ,QAAQ,CAAC+B,GAAT,CAAa,CAACC,MAAD,EAASC,KAAT,kBACV;AAAG,QAAA,GAAG,EAAEA,KAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAuBD,MAAM,CAACZ,IAA9B,MADH,CADG,CAAR;AAKP,KAlCD,MAmCK;AACD,0BACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCAFJ,CADJ,eAKI,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,MAAM,KAAKc,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAwB,GAAxB,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBALJ,CADJ;AASH;AAEJ;;AA7DuC","sourcesContent":["import React, { Component } from 'react';\r\nimport { Container, Button, Jumbotron } from 'react-bootstrap';\r\nimport './Home.css';\r\nimport firebaseApp from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport * as AWS from 'aws-sdk';\r\nimport PostData from './post.json'\r\n\r\n\r\n\r\nexport default class Home extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = { data: {'userID': 'zbc123'} };\r\n      }\r\n\r\n      \r\n\r\n    render() {\r\n\r\n\r\n        //firebaseApp.auth().setPersistence(firebaseApp.auth.Auth.Persistence.SESSION)\r\n        const user = firebaseApp.auth().currentUser;\r\n        //const awsStuff = callAWS;\r\n        if (user) {\r\n            AWS.config.update({\r\n                region: 'us-east-2',\r\n                endpoint: 'dynamodb.us-east-2.amazonaws.com',\r\n                accessKeyId: 'AKIAYPNA3BUHUHWK52FL',\r\n                secretAccessKey: '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'\r\n            });\r\n      \r\n            this.dynamodb = new AWS.DynamoDB();\r\n            this.docClient = new AWS.DynamoDB.DocumentClient();\r\n            var table = \"Provider_Patients\";\r\n      \r\n            var name = 12345;\r\n            \r\n            var params = {\r\n                TableName: table,\r\n                Key:{\r\n                    \"patient_id\": name\r\n                }\r\n            };\r\n            this.docClient.get(params, function(err, data) {\r\n                if (err) {\r\n                    console.error(\"Unable to read item. Error JSON:\", JSON.stringify(err, null, 2));\r\n                } else {\r\n                    console.log(\"GetItem succeeded:\", JSON.stringify(data, null, 2));\r\n                }\r\n            });\r\n\r\n            //console.log(awsStuff);\r\n                return (<div>\r\n                    {PostData.map((person, index) => (\r\n                        <p key={index}>Hello, {person.name}!</p>\r\n                    ))}\r\n                    </div>);  \r\n        }\r\n        else {\r\n            return (\r\n                <Container >\r\n                    <Jumbotron>\r\n                        <h2>You are not meant to be here!</h2>\r\n                        <p>Here you will be monitored.</p>\r\n                    </Jumbotron>\r\n                    <Button onClick={() => this.props.history.push('/')}>Login</Button>\r\n                </Container >\r\n            )\r\n        }\r\n\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}