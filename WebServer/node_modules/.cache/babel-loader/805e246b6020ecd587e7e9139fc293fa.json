{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Justin Worley\\\\492repo\\\\WebServer\\\\src\\\\components\\\\Home.jsx\";\nimport React, { Component } from 'react';\nimport { Container, Button, Jumbotron } from 'react-bootstrap';\nimport './Home.css';\nimport firebaseApp from 'firebase/app';\nimport 'firebase/auth';\nimport * as AWS from 'aws-sdk';\nimport PostData from './post.json';\nexport default class Home extends Component {\n  constructor() {\n    super();\n    this.state = {\n      Email: 'Need To Change',\n      patients: [],\n      heartRate: [45]\n    };\n    this.pullingPatients = this.pullingPatients.bind(this);\n    this.pullingPatients();\n  }\n\n  async pullingPatients() {\n    AWS.config.update({\n      region: 'us-east-2',\n      endpoint: 'dynamodb.us-east-2.amazonaws.com',\n      accessKeyId: 'AKIAYPNA3BUHUHWK52FL',\n      secretAccessKey: '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'\n    });\n    var docClient = new AWS.DynamoDB.DocumentClient();\n    var user = firebaseApp.auth().currentUser;\n\n    if (user) {\n      try {\n        var params = {\n          TableName: 'users',\n          Key: {\n            \"user_id\": user.uid\n          }\n        };\n        var fistName = await docClient.get(params).promise().then(result => this.setState({\n          Email: result.Item.first_name\n        }));\n        var listPatients = await docClient.get(params).promise().then(result => this.setState({\n          patients: result.Item.test\n        }));\n      } catch (error) {\n        console.error(error);\n      }\n    }\n  }\n\n  async getHeartRate(user_UID) {\n    // AWS.config.update({\n    //     region: 'us-east-2',\n    //     endpoint: 'dynamodb.us-east-2.amazonaws.com',\n    //     accessKeyId: 'AKIAYPNA3BUHUHWK52FL',\n    //     secretAccessKey: '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'\n    // });\n    // var docClient = new AWS.DynamoDB.DocumentClient();\n    //     try {\n    //         var params = {\n    //             TableName: 'users',\n    //             Key: {\n    //                 \"user_id\": user_UID\n    //             }\n    //         };\n    //         var firstName = await docClient.get(params).promise().then(result => result.Item.first_name)\n    //         return firstName\n    //         //var heartRates = await docClient.get(params).promise().then(result => result.Item.heart_rate_info)\n    //     } catch (error) {\n    //         console.error(error);\n    //     }\n    return \"hello\";\n  }\n\n  render() {\n    //firebaseApp.auth().setPersistence(firebaseApp.auth.Auth.Persistence.SESSION)\n    const user = firebaseApp.auth().currentUser; // var toPrint = this.pullingEmail();\n\n    console.log(this.state.Email); //const dataReturned = this.state.Email;\n    //console.log(toPrint);\n\n    if (user) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }\n      }, \"Welcome \", this.state.Email, \"!\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }\n      }, \" Here is a list of your patients: \", this.state.patients.map(patient => /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        onClick: this.getHeartRate(1),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 28\n        }\n      }, patient // this.getHeartRate(patient).map(rate => \n      //     <p>{rate}</p>)\n      )))), this.state.heartRate);\n    } else {\n      return /*#__PURE__*/React.createElement(Container, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Jumbotron, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 25\n        }\n      }, \"You are not meant to be here!\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 25\n        }\n      }, \"Here you will be monitored.\")), /*#__PURE__*/React.createElement(Button, {\n        onClick: () => this.props.history.push('/'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }\n      }, \"Login\"));\n    }\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Justin Worley/492repo/WebServer/src/components/Home.jsx"],"names":["React","Component","Container","Button","Jumbotron","firebaseApp","AWS","PostData","Home","constructor","state","Email","patients","heartRate","pullingPatients","bind","config","update","region","endpoint","accessKeyId","secretAccessKey","docClient","DynamoDB","DocumentClient","user","auth","currentUser","params","TableName","Key","uid","fistName","get","promise","then","result","setState","Item","first_name","listPatients","test","error","console","getHeartRate","user_UID","render","log","map","patient","props","history","push"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Container, Button, Jumbotron } from 'react-bootstrap';\r\nimport './Home.css';\r\nimport firebaseApp from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport * as AWS from 'aws-sdk';\r\nimport PostData from './post.json'\r\n\r\n\r\n\r\nexport default class Home extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = { Email: 'Need To Change', patients: [], heartRate: [45] };\r\n        this.pullingPatients = this.pullingPatients.bind(this)\r\n        this.pullingPatients()\r\n    }\r\n\r\n\r\n    async pullingPatients() {\r\n        AWS.config.update({\r\n            region: 'us-east-2',\r\n            endpoint: 'dynamodb.us-east-2.amazonaws.com',\r\n            accessKeyId: 'AKIAYPNA3BUHUHWK52FL',\r\n            secretAccessKey: '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'\r\n        });\r\n        var docClient = new AWS.DynamoDB.DocumentClient();\r\n        var user = firebaseApp.auth().currentUser;\r\n        if (user) {\r\n            try {\r\n                var params = {\r\n                    TableName: 'users',\r\n                    Key: {\r\n                        \"user_id\": user.uid\r\n                    }\r\n                };\r\n                var fistName = await docClient.get(params).promise().then(result => this.setState({ Email: result.Item.first_name }))\r\n                var listPatients = await docClient.get(params).promise().then(result =>\r\n                    this.setState({\r\n                        patients: result.Item.test\r\n                    }))\r\n            } catch (error) {\r\n                console.error(error);\r\n            }\r\n        }\r\n    }\r\n\r\n    async getHeartRate(user_UID) {\r\n        // AWS.config.update({\r\n        //     region: 'us-east-2',\r\n        //     endpoint: 'dynamodb.us-east-2.amazonaws.com',\r\n        //     accessKeyId: 'AKIAYPNA3BUHUHWK52FL',\r\n        //     secretAccessKey: '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'\r\n        // });\r\n        // var docClient = new AWS.DynamoDB.DocumentClient();\r\n        //     try {\r\n        //         var params = {\r\n        //             TableName: 'users',\r\n        //             Key: {\r\n        //                 \"user_id\": user_UID\r\n        //             }\r\n        //         };\r\n        //         var firstName = await docClient.get(params).promise().then(result => result.Item.first_name)\r\n        //         return firstName\r\n        //         //var heartRates = await docClient.get(params).promise().then(result => result.Item.heart_rate_info)\r\n        //     } catch (error) {\r\n        //         console.error(error);\r\n        //     }\r\n        return \"hello\";\r\n    }\r\n\r\n    render() {\r\n\r\n\r\n        //firebaseApp.auth().setPersistence(firebaseApp.auth.Auth.Persistence.SESSION)\r\n        const user = firebaseApp.auth().currentUser;\r\n        // var toPrint = this.pullingEmail();\r\n        console.log(this.state.Email)\r\n        //const dataReturned = this.state.Email;\r\n        //console.log(toPrint);\r\n\r\n\r\n        if (user) {\r\n\r\n            return (\r\n                <div>\r\n                    <p>\r\n                        Welcome {this.state.Email}!</p>\r\n                    <p> Here is a list of your patients: {this.state.patients.map(patient => \r\n                        <p><Button onClick={this.getHeartRate(1)}>{patient\r\n                        // this.getHeartRate(patient).map(rate => \r\n                        //     <p>{rate}</p>)\r\n                        }</Button></p>)\r\n                    }</p>\r\n                    {this.state.heartRate}\r\n                </div>);\r\n        }\r\n        else {\r\n            return (\r\n                <Container >\r\n                    <Jumbotron>\r\n                        <h2>You are not meant to be here!</h2>\r\n                        <p>Here you will be monitored.</p>\r\n                    </Jumbotron>\r\n                    <Button onClick={() => this.props.history.push('/')}>Login</Button>\r\n                </Container >\r\n            )\r\n        }\r\n\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}