{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Justin Worley\\\\492repo\\\\WebServer\\\\src\\\\components\\\\Home.jsx\";\nimport React, { Component } from 'react';\nimport { Container, Button, Jumbotron } from 'react-bootstrap';\nimport './Home.css';\nimport firebaseApp from 'firebase/app';\nimport 'firebase/auth';\nimport * as AWS from 'aws-sdk';\nimport PostData from './post.json';\nexport default class Home extends Component {\n  constructor() {\n    super();\n    this.state = {\n      Email: 'Need To Change',\n      patients: []\n    };\n    this.pullingEmail = this.pullingEmail.bind(this);\n    this.pullingEmail();\n  }\n\n  async pullingEmail() {\n    AWS.config.update({\n      region: 'us-east-2',\n      endpoint: 'dynamodb.us-east-2.amazonaws.com',\n      accessKeyId: 'AKIAYPNA3BUHUHWK52FL',\n      secretAccessKey: '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'\n    });\n    var docClient = new AWS.DynamoDB.DocumentClient();\n    var user = firebaseApp.auth().currentUser;\n\n    if (user) {\n      try {\n        var params = {\n          TableName: 'users',\n          Key: {\n            \"user_id\": user.uid\n          }\n        };\n        var patientNumber = 0;\n        var nextPatient = \"firstone\";\n        var patientUID; //while(!nextPatient === undefined){\n\n        var result = await docClient.get(params).promise().then(result => this.setState({\n          Email: result.Item.first_name\n        }), //nextPatient = result.Item.patients[patientNumber],\n        result => this.state.patients.join(result.Item.sex) //   if(nextPatient != undefined){}\n        //   this.state.patients.map(nextPantient.)\n        ); //}\n      } catch (error) {\n        console.error(error);\n      }\n    }\n  } // async getData() {\n  //     AWS.config.update({\n  //         region: 'us-east-2',\n  //         endpoint: 'dynamodb.us-east-2.amazonaws.com',\n  //         accessKeyId: 'AKIAYPNA3BUHUHWK52FL',\n  //         secretAccessKey: '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'\n  //     });\n  //     //this.dynamodb = new AWS.DynamoDB();\n  //     this.docClient = new AWS.DynamoDB.DocumentClient();\n  //     var params = {\n  //         TableName: 'users',\n  //         Key:{\n  //             \"user_id\": 'EbGp7qwQWlfaRz2PD0X0iSL0ivl2'\n  //         }\n  //     };\n  //     var documentClient = new AWS.DynamoDB.DocumentClient();\n  //     var dataPulled;\n  //     this.setState({ Email: await documentClient.get(params, function(err, data) {\n  //         if (err){ \n  //             dataPulled = \"YOU F'ed Up\";\n  //         }\n  //         else{\n  //             console.log(data.Item.email+\" in Function\");\n  //             // this.setState({ Email: data.Item.email });\n  //             dataPulled = \"IT WORKED!\";\n  //         }\n  //         }).Item.email})\n  // }\n  //   updateState(dataPassed) {\n  //     (async () => {\n  //        const data = await this.pull_data();\n  //        console.log(data);\n  //        return JSON.stringify(data);\n  //     })();\n  // }\n  //   async pull_data(){\n  //     AWS.config.update({\n  //         region: 'us-east-2',\n  //         endpoint: 'dynamodb.us-east-2.amazonaws.com',\n  //         accessKeyId: 'AKIAYPNA3BUHUHWK52FL',\n  //         secretAccessKey: '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'\n  //     });\n  //     //this.dynamodb = new AWS.DynamoDB();\n  //     this.docClient = new AWS.DynamoDB.DocumentClient();\n  //     var params = {\n  //         TableName: 'users',\n  //         Key:{\n  //             \"user_id\": 'EbGp7qwQWlfaRz2PD0X0iSL0ivl2'\n  //         }\n  //     };\n  //     var documentClient = new AWS.DynamoDB.DocumentClient();\n  //     var dataPulled;\n  //     var getting = documentClient.get(params, function(err, data) {\n  //         if (err){ \n  //             dataPulled = \"YOU F'ed Up\";\n  //         }\n  //         else{\n  //             console.log(data.Item.email+\" in Function\");\n  //             //this.updateState(data);\n  //             dataPulled = \"IT WORKED!\";\n  //         }\n  //       }).promise;\n  //       return dataPulled;\n  //   }\n\n\n  render() {\n    //firebaseApp.auth().setPersistence(firebaseApp.auth.Auth.Persistence.SESSION)\n    const user = firebaseApp.auth().currentUser; // var toPrint = this.pullingEmail();\n\n    console.log(this.state.Email); //const dataReturned = this.state.Email;\n    //console.log(toPrint);\n\n    if (user) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 17\n        }\n      }, \"Welcome \", this.state.Email, \"! Here is a list of your patients: \\\\n Here is your sex \", this.state.patients.entries);\n    } else {\n      return /*#__PURE__*/React.createElement(Container, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Jumbotron, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 25\n        }\n      }, \"You are not meant to be here!\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 25\n        }\n      }, \"Here you will be monitored.\")), /*#__PURE__*/React.createElement(Button, {\n        onClick: () => this.props.history.push('/'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 21\n        }\n      }, \"Login\"));\n    }\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Justin Worley/492repo/WebServer/src/components/Home.jsx"],"names":["React","Component","Container","Button","Jumbotron","firebaseApp","AWS","PostData","Home","constructor","state","Email","patients","pullingEmail","bind","config","update","region","endpoint","accessKeyId","secretAccessKey","docClient","DynamoDB","DocumentClient","user","auth","currentUser","params","TableName","Key","uid","patientNumber","nextPatient","patientUID","result","get","promise","then","setState","Item","first_name","join","sex","error","console","render","log","entries","props","history","push"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,SAAT,EAAoBC,MAApB,EAA4BC,SAA5B,QAA6C,iBAA7C;AACA,OAAO,YAAP;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,OAAO,eAAP;AACA,OAAO,KAAKC,GAAZ,MAAqB,SAArB;AACA,OAAOC,QAAP,MAAqB,aAArB;AAIA,eAAe,MAAMC,IAAN,SAAmBP,SAAnB,CAA6B;AACxCQ,EAAAA,WAAW,GAAG;AACV;AACA,SAAKC,KAAL,GAAa;AAAEC,MAAAA,KAAK,EAAE,gBAAT;AAA2BC,MAAAA,QAAQ,EAAE;AAArC,KAAb;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKD,YAAL;AACD;;AAGD,QAAMA,YAAN,GAAqB;AAEnBP,IAAAA,GAAG,CAACS,MAAJ,CAAWC,MAAX,CAAkB;AACNC,MAAAA,MAAM,EAAE,WADF;AAENC,MAAAA,QAAQ,EAAE,kCAFJ;AAGNC,MAAAA,WAAW,EAAE,sBAHP;AAINC,MAAAA,eAAe,EAAE;AAJX,KAAlB;AAOA,QAAIC,SAAS,GAAG,IAAIf,GAAG,CAACgB,QAAJ,CAAaC,cAAjB,EAAhB;AAEA,QAAIC,IAAI,GAAGnB,WAAW,CAACoB,IAAZ,GAAmBC,WAA9B;;AACA,QAAGF,IAAH,EAAQ;AACJ,UAAG;AACC,YAAIG,MAAM,GAAG;AACTC,UAAAA,SAAS,EAAE,OADF;AAETC,UAAAA,GAAG,EAAC;AACA,uBAAWL,IAAI,CAACM;AADhB;AAFK,SAAb;AAMA,YAAIC,aAAa,GAAG,CAApB;AACA,YAAIC,WAAW,GAAG,UAAlB;AACA,YAAIC,UAAJ,CATD,CAUC;;AACA,YAAIC,MAAM,GAAG,MAAMb,SAAS,CAACc,GAAV,CAAcR,MAAd,EAAsBS,OAAtB,GAAgCC,IAAhC,CAAqCH,MAAM,IAAI,KAAKI,QAAL,CAAc;AAC5E3B,UAAAA,KAAK,EAAEuB,MAAM,CAACK,IAAP,CAAYC;AADyD,SAAd,CAA/C,EAGjB;AACDN,QAAAA,MAAM,IAAI,KAAKxB,KAAL,CAAWE,QAAX,CAAoB6B,IAApB,CAAyBP,MAAM,CAACK,IAAP,CAAYG,GAArC,CAJQ,CAKnB;AACA;AANmB,SAAnB,CAXD,CAmBC;AACD,OApBH,CAoBI,OAAOC,KAAP,EAAc;AACZC,QAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACH;AACN;AAEF,GA/CqC,CAgD5B;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIJ;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAERE,EAAAA,MAAM,GAAG;AAGL;AACA,UAAMrB,IAAI,GAAGnB,WAAW,CAACoB,IAAZ,GAAmBC,WAAhC,CAJK,CAKL;;AACAkB,IAAAA,OAAO,CAACE,GAAR,CAAY,KAAKpC,KAAL,CAAWC,KAAvB,EANK,CAOL;AACA;;AAGA,QAAIa,IAAJ,EAAU;AAEJ,0BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACU,KAAKd,KAAL,CAAWC,KADrB,8DAEmB,KAAKD,KAAL,CAAWE,QAAX,CAAoBmC,OAFvC,CADF;AAKL,KAPD,MAQK;AACD,0BACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCAFJ,CADJ,eAKI,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,MAAM,KAAKC,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAwB,GAAxB,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBALJ,CADJ;AASH;AAEJ;;AA3JuC","sourcesContent":["import React, { Component } from 'react';\r\nimport { Container, Button, Jumbotron } from 'react-bootstrap';\r\nimport './Home.css';\r\nimport firebaseApp from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport * as AWS from 'aws-sdk';\r\nimport PostData from './post.json'\r\n\r\n\r\n\r\nexport default class Home extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = { Email: 'Need To Change', patients: []};\r\n        this.pullingEmail = this.pullingEmail.bind(this)\r\n        this.pullingEmail()\r\n      }\r\n\r\n\r\n      async pullingEmail() {\r\n\r\n        AWS.config.update({\r\n                    region: 'us-east-2',\r\n                    endpoint: 'dynamodb.us-east-2.amazonaws.com',\r\n                    accessKeyId: 'AKIAYPNA3BUHUHWK52FL',\r\n                    secretAccessKey: '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'\r\n                });\r\n\r\n        var docClient = new AWS.DynamoDB.DocumentClient();\r\n\r\n        var user = firebaseApp.auth().currentUser;\r\n        if(user){\r\n            try{\r\n                var params = {\r\n                    TableName: 'users',\r\n                    Key:{\r\n                        \"user_id\": user.uid\r\n                    }\r\n                }; \r\n                var patientNumber = 0;\r\n                var nextPatient = \"firstone\";\r\n                var patientUID;\r\n                //while(!nextPatient === undefined){\r\n                var result = await docClient.get(params).promise().then(result => this.setState({\r\n                    Email: result.Item.first_name,\r\n                  }),\r\n                  //nextPatient = result.Item.patients[patientNumber],\r\n                 result => this.state.patients.join(result.Item.sex)\r\n                //   if(nextPatient != undefined){}\r\n                //   this.state.patients.map(nextPantient.)\r\n                  )\r\n                //}\r\n              } catch (error) {\r\n                  console.error(error);\r\n              }\r\n        }\r\n\r\n      }\r\n                // async getData() {\r\n                //     AWS.config.update({\r\n                //         region: 'us-east-2',\r\n                //         endpoint: 'dynamodb.us-east-2.amazonaws.com',\r\n                //         accessKeyId: 'AKIAYPNA3BUHUHWK52FL',\r\n                //         secretAccessKey: '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'\r\n                //     });\r\n                \r\n                //     //this.dynamodb = new AWS.DynamoDB();\r\n                //     this.docClient = new AWS.DynamoDB.DocumentClient();\r\n                \r\n                //     var params = {\r\n                //         TableName: 'users',\r\n                //         Key:{\r\n                //             \"user_id\": 'EbGp7qwQWlfaRz2PD0X0iSL0ivl2'\r\n                //         }\r\n                //     };\r\n                        \r\n                //     var documentClient = new AWS.DynamoDB.DocumentClient();\r\n                //     var dataPulled;\r\n                //     this.setState({ Email: await documentClient.get(params, function(err, data) {\r\n                //         if (err){ \r\n                            \r\n                //             dataPulled = \"YOU F'ed Up\";\r\n                //         }\r\n                //         else{\r\n                //             console.log(data.Item.email+\" in Function\");\r\n                //             // this.setState({ Email: data.Item.email });\r\n                //             dataPulled = \"IT WORKED!\";\r\n                //         }\r\n                //         }).Item.email})\r\n                // }\r\n\r\n\r\n\r\n            //   updateState(dataPassed) {\r\n            //     (async () => {\r\n            //        const data = await this.pull_data();\r\n            //        console.log(data);\r\n            //        return JSON.stringify(data);\r\n            //     })();\r\n            // }\r\n                \r\n            //   async pull_data(){\r\n            //     AWS.config.update({\r\n            //         region: 'us-east-2',\r\n            //         endpoint: 'dynamodb.us-east-2.amazonaws.com',\r\n            //         accessKeyId: 'AKIAYPNA3BUHUHWK52FL',\r\n            //         secretAccessKey: '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'\r\n            //     });\r\n\r\n            //     //this.dynamodb = new AWS.DynamoDB();\r\n            //     this.docClient = new AWS.DynamoDB.DocumentClient();\r\n\r\n            //     var params = {\r\n            //         TableName: 'users',\r\n            //         Key:{\r\n            //             \"user_id\": 'EbGp7qwQWlfaRz2PD0X0iSL0ivl2'\r\n            //         }\r\n            //     };\r\n                    \r\n            //     var documentClient = new AWS.DynamoDB.DocumentClient();\r\n            //     var dataPulled;\r\n            //     var getting = documentClient.get(params, function(err, data) {\r\n            //         if (err){ \r\n            //             dataPulled = \"YOU F'ed Up\";\r\n            //         }\r\n            //         else{\r\n            //             console.log(data.Item.email+\" in Function\");\r\n            //             //this.updateState(data);\r\n            //             dataPulled = \"IT WORKED!\";\r\n            //         }\r\n            //       }).promise;\r\n            //       return dataPulled;\r\n            //   }\r\n\r\n    render() {\r\n\r\n\r\n        //firebaseApp.auth().setPersistence(firebaseApp.auth.Auth.Persistence.SESSION)\r\n        const user = firebaseApp.auth().currentUser;\r\n        // var toPrint = this.pullingEmail();\r\n        console.log(this.state.Email)\r\n        //const dataReturned = this.state.Email;\r\n        //console.log(toPrint);\r\n\r\n       \r\n        if (user) {\r\n           \r\n              return (\r\n                <div>\r\n                 Welcome {this.state.Email}! Here is a list of your patients: \\n\r\n                 Here is your sex {this.state.patients.entries}\r\n                  </div>);\r\n        }\r\n        else {\r\n            return (\r\n                <Container >\r\n                    <Jumbotron>\r\n                        <h2>You are not meant to be here!</h2>\r\n                        <p>Here you will be monitored.</p>\r\n                    </Jumbotron>\r\n                    <Button onClick={() => this.props.history.push('/')}>Login</Button>\r\n                </Container >\r\n            )\r\n        }\r\n\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}